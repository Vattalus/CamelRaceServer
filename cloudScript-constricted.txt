function generateFailObj(b,a){return{Result:"Failed",Message:b,Data:a}}function generateErrObj(b,a){return{Result:"Error",Message:b,Data:a}}function loadTitleDataJson(b){var a=server.GetTitleData({PlayFabId:currentPlayerId,Keys:[b]});if(void 0==a||void 0==a.Data||void 0==a.Data[b])return null;b=JSON.parse(a.Data[b]);return void 0==b?null:b}function getServerTime(){return Math.floor((new Date).getTime()/1E3)}
function randomRange(b,a){return Math.round(Math.random()*(Number(a)-Number(b)))+Number(b)}function addCurrency(b,a){server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b,Amount:a})}
handlers.grantOasis=function(b,a){a=loadTitleDataJson("Balancing_Oasis");if(void 0==a||null==a)return generateErrObj("Oasis Balancing JSON undefined or null");var d=getNextOasisTime(a.rechargeInterval);b=getServerTime();if(d>b)return generateFailObj("Oasis not ready yet",d);var d=randomRange(a.scRewardBase,2*a.scRewardBase),e=randomRange(a.hcRewardMin,a.hcRewardMax);a=randomRange(a.ticketsRewardMin,a.ticketsRewardMax);addCurrency("SC",d);addCurrency("HC",e);addCurrency("TK",a);server.UpdateUserReadOnlyData({PlayFabId:currentPlayerId,
Data:{lastClaimedOasisTimestamp:b}});a=server.GetUserInventory({PlayFabId:currentPlayerId}).VirtualCurrency;return{lastOasisTimestamp:b,VirtualCurrency:a}};handlers.getOasisData=function(b,a){b=loadTitleDataJson("Balancing_Oasis");return void 0==b||null==b?generateErrObj("Oasis Balancing JSON undefined or null"):getNextOasisTime(b.rechargeInterval)};
function getNextOasisTime(b){var a=server.GetUserReadOnlyData({PlayFabId:currentPlayerId,Keys:["lastClaimedOasisTimestamp"]}),d=0;void 0!=a.Data.lastClaimedOasisTimestamp&&void 0!=a.Data.lastClaimedOasisTimestamp.Value&&(d=Number(a.Data.lastClaimedOasisTimestamp.Value));return d+3600*Number(b)}handlers.raceEnd=function(b,a){null!=b&&b.endRaceReward&&Number(b.endRaceReward)&&addCurrency("SC",Number(b.endRaceReward));return{Result:"OK"}};
handlers.endRace_quick=function(b,a){a=loadTitleDataJson("RaceRewards_Quick");if(void 0==a||null==a)return generateErrObj("RaceRewards_Quick JSON undefined or null");b=GiveRaceRewards(b,a);return null!=b?generateErrObj(b):{VirtualCurrency:server.GetUserInventory({PlayFabId:currentPlayerId}).VirtualCurrency}};
handlers.endRace_event=function(b,a){a=loadTitleDataJson("RaceRewards_Events");if(void 0==a||null==a)return generateErrObj("RaceRewards_Events JSON undefined or null");a=a[b.seriesIndex];if(void 0==a||null==a)return generateErrObj("Series with index: "+b.seriesIndex+" not found");if(void 0==a.EventsList||null==a.EventsList)return generateErrObj("List of events not found for series with index: "+b.seriesIndex);b=server.GetUserReadOnlyData({PlayFabId:currentPlayerId,Keys:["ReachedSeries","ReachedEvent"]});
void 0==b.Data.ReachedSeries||null==b.Data.ReachedSeries||isNaN(b.Data.ReachedSeries.Value);log.debug(b)};
function GiveRaceRewards(b,a){var d=Number(0),e=Number(0),f=Number(0);if(void 0==a.Placement_SC||void 0==a.Placement_HC||void 0==a.Placement_TK)return"race rewards JSON is not valid";var c=a.Placement_SC[b.finishPosition];void 0==c||null==c||isNaN(Number(c))||(d+=Number(c));c=a.Placement_HC[b.finishPosition];void 0==c||null==c||isNaN(Number(c))||(e+=Number(c));c=a.Placement_TK[b.finishPosition];void 0==c||null==c||isNaN(Number(c))||(f+=Number(c));isNaN(Number(a.MaxStartBonus))||(d+=Number(a.MaxStartBonus));
isNaN(Number(b.finishSpeedFactor))||isNaN(Number(a.MaxFinishBonus))||(d+=Math.round(Number(a.MaxFinishBonus)*Number(b.finishSpeedFactor)));0<d&&addCurrency("SC",d);0<e&&addCurrency("HC",e);0<f&&addCurrency("TK",f);return null};
